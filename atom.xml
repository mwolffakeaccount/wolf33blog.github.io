<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wolf33&#39;s blog</title>
  
  <subtitle>绝境狼王的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wolf33blog.github.io/"/>
  <updated>2019-05-15T12:57:35.761Z</updated>
  <id>http://wolf33blog.github.io/</id>
  
  <author>
    <name>wolf33</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>洛谷】P1217 回文质数</title>
    <link href="http://wolf33blog.github.io/%E6%B4%9B%E8%B0%B7%E3%80%91P1217-%E5%9B%9E%E6%96%87%E8%B4%A8%E6%95%B0/"/>
    <id>http://wolf33blog.github.io/洛谷】P1217-回文质数/</id>
    <published>2019-05-15T12:57:35.000Z</published>
    <updated>2019-05-15T12:57:35.761Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【洛谷】P1579 哥德巴赫猜想（升级版）</title>
    <link href="http://wolf33blog.github.io/%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1579-%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3%EF%BC%88%E5%8D%87%E7%BA%A7%E7%89%88%EF%BC%89/"/>
    <id>http://wolf33blog.github.io/【洛谷】P1579-哥德巴赫猜想（升级版）/</id>
    <published>2019-05-14T16:00:00.000Z</published>
    <updated>2019-05-15T13:00:35.018Z</updated>
    
    <content type="html"><![CDATA[<p>线性筛经典题</p><a id="more"></a><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给一个数n，输出3个质数，使这三个质数之和为n</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>直接线性筛后用prime数组枚举。</p><h2 id="算法简述"><a href="#算法简述" class="headerlink" title="算法简述"></a>算法简述</h2><p><img src="/【洛谷】P1579-哥德巴赫猜想（升级版）/1.gif" alt></p><p>线性筛，就是上图的算法，代码中vis数组为标注此数是否被访问，而prime数组用于保存质数。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">20010</span>],prime[<span class="number">5010</span>];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pri</span><span class="params">(<span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=size;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            prime[++cnt]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt &amp;&amp; i*prime[j]&lt;size;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i*prime[j]]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]==<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=x;i++)</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n); </span><br><span class="line">    pri(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=cnt;j++)</span><br><span class="line">    <span class="keyword">if</span>(check(n-prime[i]-prime[j]) &amp;&amp; (n-prime[i]-prime[j])&gt;<span class="number">0</span> &amp;&amp; prime[i]&gt;<span class="number">0</span> &amp;&amp; prime[j]&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d"</span>, prime[i],prime[j], n-prime[i]-prime[j]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>check为最简单的筛素数方法，而pri为线性筛素数筛法</p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>本文动图来自百度</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;线性筛经典题&lt;/p&gt;
    
    </summary>
    
    
      <category term="线性筛" scheme="http://wolf33blog.github.io/tags/%E7%BA%BF%E6%80%A7%E7%AD%9B/"/>
    
  </entry>
  
  <entry>
    <title>【洛谷】P1217 回文质数</title>
    <link href="http://wolf33blog.github.io/%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1217%20%E5%9B%9E%E6%96%87%E8%B4%A8%E6%95%B0/"/>
    <id>http://wolf33blog.github.io/【洛谷】P1217 回文质数/</id>
    <published>2019-05-10T16:00:00.000Z</published>
    <updated>2019-05-15T13:00:55.333Z</updated>
    
    <content type="html"><![CDATA[<p>一道很有意思的题目</p><a id="more"></a><p>题目大意：给一个区间，求出这个区间中既是回文数，又是质数的数。</p><p>等等，这关标签里面的深搜什么事？</p><p>待我慢慢道来……</p><p>首先，看到这个题目的明显感觉：先线性筛之后再判断回文不就行了</p><p>紧接着发现：这是1亿的数组？线性筛存得下吗？</p><p>计算发现：好像是存的下的，大概90MB左右。</p><p>写出了一个小函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">          pri[++pri[<span class="number">0</span>]]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=pri[<span class="number">0</span>]&amp;&amp;i*pri[j]&lt;=maxn;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i*pri[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%pri[j]==<span class="number">0</span>)</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>复杂度O(nlogn)，应该可以用。</p><p>然后判断回文数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check_prime</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y=x,num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(y!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        num=num*<span class="number">10</span>+y%<span class="number">10</span>;</span><br><span class="line">        y/=<span class="number">10</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span>(num==x) </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里也很容易理解，把x翻转过来，如果x=num就表示是回文</p><p>第一次提交：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">1000010</span>];</span><br><span class="line"><span class="keyword">int</span> pri[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=r;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">          pri[++pri[<span class="number">0</span>]]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=pri[<span class="number">0</span>] &amp;&amp; i*pri[j]&lt;=r;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i*pri[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%pri[j]==<span class="number">0</span>)</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check_hw</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y=x,num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(y!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        num=num*<span class="number">10</span>+y%<span class="number">10</span>;</span><br><span class="line">        y/=<span class="number">10</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span>(num==x)  </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;l, &amp;r);</span><br><span class="line">    check();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000100</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(pri[i]&lt;=r &amp;&amp; pri[i]&gt;=l &amp;&amp; check_hw(pri[i]))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, pri[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>re了四个点（<a href="https://www.luogu.org/recordnew/show/18954480" target="_blank" rel="noopener">提交记录</a>)</p><p>TBC.</p><hr><h2 id="文献："><a href="#文献：" class="headerlink" title="文献："></a>文献：</h2><p><a href="https://societyniu.blog.luogu.org/solution-p1217" target="_blank" rel="noopener">回文质数题解1</a></p><p><a href="https://www.luogu.org/blog/user163/solution-p1217" target="_blank" rel="noopener">回文质数题解2</a></p><p><a href="https://www.luogu.org/blog/lenfrey/ti-xie-p1217-usaco15-hui-wen-zhi-shuo-prime-palindromes" target="_blank" rel="noopener">回文质数题解3</a></p><h2 id="声明："><a href="#声明：" class="headerlink" title="声明："></a>声明：</h2><p><a href="https://wolf33blog.github.io/%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1579%20%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3%EF%BC%88%E5%8D%87%E7%BA%A7%E7%89%88%EF%BC%89/">一道经典的线性筛题目</a></p><p>线性筛这里指“埃拉托斯特尼筛法”，是一种简单的鉴定质数的方法，因为其复杂度为线性复杂度而得名。</p><p>可以以下面的动图来看;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一道很有意思的题目&lt;/p&gt;
    
    </summary>
    
    
      <category term="高性能  深搜  线性筛" scheme="http://wolf33blog.github.io/tags/%E9%AB%98%E6%80%A7%E8%83%BD-%E6%B7%B1%E6%90%9C-%E7%BA%BF%E6%80%A7%E7%AD%9B/"/>
    
  </entry>
  
  <entry>
    <title>Before Reading</title>
    <link href="http://wolf33blog.github.io/Top/"/>
    <id>http://wolf33blog.github.io/Top/</id>
    <published>2019-05-10T16:00:00.000Z</published>
    <updated>2019-05-11T08:24:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>在阅读以下内容前请先阅览此文，大概需要1分钟</p><a id="more"></a><h3 id="使用说明："><a href="#使用说明：" class="headerlink" title="使用说明："></a>使用说明：</h3><p>不建议手机党使用（因为我也没有看过手机的版本），电脑使用更佳。</p><p>电脑使用由于技术原因，建议缩小页面百分比至90%</p><p>左下角的地球为访客数量统计，如果不合适可以把鼠标移至地球上，然后缩小。</p><p>如果有任何bug或问题，请洛谷私信uid:101153</p><h3 id="鸣谢："><a href="#鸣谢：" class="headerlink" title="鸣谢："></a>鸣谢：</h3><p>本站为个人站。</p><p>本站的建成感谢 <a href="https://venusnero.github.io/" target="_blank" rel="noopener">Venus</a>的帮助和答疑。</p><p>TBC.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在阅读以下内容前请先阅览此文，大概需要1分钟&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【洛谷】P1598 垂直柱状图</title>
    <link href="http://wolf33blog.github.io/%E3%80%90%E6%B4%9B%E8%B0%B7%E3%80%91P1598%20%E5%9E%82%E7%9B%B4%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
    <id>http://wolf33blog.github.io/【洛谷】P1598 垂直柱状图/</id>
    <published>2019-05-10T16:00:00.000Z</published>
    <updated>2019-05-11T08:55:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>一道简单的模拟题，但我还是调了30分钟。</p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://www.luogu.org/problemnew/show/P1598" target="_blank" rel="noopener">题目链接</a></h2><hr><p>好像是一道模拟题</p><p>这题怎么是普及-难度但是我调了半个多小时啊啊啊啊啊！</p><p>第一次调试：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">10</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, a[i]+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">strlen</span>(a[i]+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            cnt[a[i][j]-<span class="string">'A'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="string">'A'</span>;i&lt;=<span class="string">'Z'</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(cnt[i-<span class="string">'A'</span>]&gt;ans)</span><br><span class="line">            ans=cnt[i-<span class="string">'A'</span>];</span><br><span class="line"><span class="comment">//    for(int i='A';i&lt;='Z';i++)</span></span><br><span class="line"><span class="comment">//    printf("%d ", cnt[i-'A']);</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=ans;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="string">'A'</span>;j&lt;=<span class="string">'Z'</span>;j++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(cnt[j-<span class="string">'A'</span>&gt;=i])</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">           <span class="keyword">else</span>  </span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入：</p><blockquote><p>THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG.<br>THIS IS AN EXAMPLE TO TEST FOR YOUR<br>HISTOGRAM PROGRAM.<br>HELLO!</p></blockquote><p>输出：</p><blockquote><p>0 1 1 0 1 1 0 1 1 0 1 0 0 1 2 0 1 1 0 1 1 0 1 1 0 0 </p></blockquote><p>？？？这是怎么回事？</p><p>简单看了一下，好像没有问题。开始逐步查看，先查看a[i]的输入</p><p>emmmm好像是scanf(“%s”, a[i]+1)的原因！</p><p>使用gets输入，改为gets(a[i]+1)</p><p>那么为什么改成这个就是对的了呢？</p><p>gets可以读入空格，但是scanf不能，所以导致这里只输入了第一个单词，错误。</p><p>开始查看正确考试的输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">10</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        gets(a[i]+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">strlen</span>(a[i]+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            cnt[a[i][j]-<span class="string">'A'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="string">'A'</span>;i&lt;=<span class="string">'Z'</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(cnt[i-<span class="string">'A'</span>]&gt;ans)</span><br><span class="line">            ans=cnt[i-<span class="string">'A'</span>];</span><br><span class="line"><span class="comment">//    for(int i='A';i&lt;='Z';i++)</span></span><br><span class="line"><span class="comment">//    printf("%d ", cnt[i-'A']);</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=ans;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="string">'A'</span>;j&lt;=<span class="string">'Z'</span>;j++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(cnt[j-<span class="string">'A'</span>&gt;=i])</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">           <span class="keyword">else</span>  </span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果就凉了，输出是ABCDEFGHIJKLMNOPQRSTUVWXYZ全部一样</p><p>那么就是20行到32行的问题了，接着查看。</p><p>注意看24行：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(cnt[j-<span class="string">'A'</span>&gt;=i])</span><br></pre></td></tr></table></figure><p>这括号打错了（<del>大雾</del>）</p><p>改为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(cnt[j-<span class="string">'A'</span>]&gt;=i)</span><br></pre></td></tr></table></figure><p>似乎对了，<a href="https://www.luogu.org/recordnew/show/18952331" target="_blank" rel="noopener">提交</a></p><p>正确！完结撒花（<del>大雾</del>）</p><hr><p>代码一览：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">10</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        gets(a[i]+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> n=<span class="built_in">strlen</span>(a[i]+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            cnt[a[i][j]-<span class="string">'A'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="string">'A'</span>;i&lt;=<span class="string">'Z'</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(cnt[i-<span class="string">'A'</span>]&gt;ans)</span><br><span class="line">            ans=cnt[i-<span class="string">'A'</span>];</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=ans;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="string">'A'</span>;j&lt;=<span class="string">'Z'</span>;j++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(cnt[j-<span class="string">'A'</span>]&gt;=i)</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">           <span class="keyword">else</span>  </span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一道简单的模拟题，但我还是调了30分钟。&lt;/p&gt;
    
    </summary>
    
    
      <category term="模拟" scheme="http://wolf33blog.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
  </entry>
  
  <entry>
    <title>Test</title>
    <link href="http://wolf33blog.github.io/test/"/>
    <id>http://wolf33blog.github.io/test/</id>
    <published>2019-03-20T16:00:00.000Z</published>
    <updated>2019-05-15T12:22:11.146Z</updated>
    
    <content type="html"><![CDATA[<p>一个小测试</p><a id="more"></a><h1 id="二次测试"><a href="#二次测试" class="headerlink" title="二次测试"></a>二次测试</h1><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br><strong><em>这是斜体加粗的文字</em></strong><br><del>这是加删除线的文字</del></p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><hr><hr><hr><hr><p>![blockchain](<a href="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/" target="_blank" rel="noopener">https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/</a><br>u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg “区块链”)</p><p><a href="http://jianshu.com" target="_blank" rel="noopener">简书</a><br><a href="http://baidu.com" target="_blank" rel="noopener">百度</a></p><p><a href="https://www.jianshu.com/u/1f5ac0cf6a8b" target="_blank">简书</a></p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><p>1.列表内容<br>2.列表内容<br>3.列表内容</p><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table><p><code>create database hero;</code></p><p>(<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    function fun()&#123;</span><br><span class="line">         echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    fun();</span><br><span class="line">(```)</span><br><span class="line"></span><br><span class="line">```flow</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个小测试&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://wolf33blog.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
